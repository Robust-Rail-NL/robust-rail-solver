// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Location.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AlgoIfaceEvaluator {

  /// <summary>Holder for reflection information generated from Location.proto</summary>
  public static partial class LocationReflection {

    #region Descriptor
    /// <summary>File descriptor for Location.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Mb2NhdGlvbi5wcm90bxIUYWxnb19pZmFjZV9ldmFsdWF0b3IaD1V0aWxp",
            "dGllcy5wcm90byLKAgoITG9jYXRpb24SMwoKdHJhY2tQYXJ0cxgBIAMoCzIf",
            "LmFsZ29faWZhY2VfZXZhbHVhdG9yLlRyYWNrUGFydBIyCgpmYWNpbGl0aWVz",
            "GAIgAygLMh4uYWxnb19pZmFjZV9ldmFsdWF0b3IuRmFjaWxpdHkSMQoJdGFz",
            "a1R5cGVzGAMgAygLMh4uYWxnb19pZmFjZV9ldmFsdWF0b3IuVGFza1R5cGUS",
            "GAoQbW92ZW1lbnRDb25zdGFudBgEIAEoERIgChhtb3ZlbWVudFRyYWNrQ29l",
            "ZmZpY2llbnQYBSABKBESIQoZbW92ZW1lbnRTd2l0Y2hDb2VmZmljaWVudBgG",
            "IAEoERJDCg9kaXN0YW5jZUVudHJpZXMYByADKAsyKi5hbGdvX2lmYWNlX2V2",
            "YWx1YXRvci5XYWxraW5nRGlzdGFuY2VFbnRyeSJkCghSZXNvdXJjZRIMCgRu",
            "YW1lGAEgASgJEhUKC3RyYWNrUGFydElkGAMgASgESAASFAoKZmFjaWxpdHlJ",
            "ZBgEIAEoBEgAEhEKB3N0YWZmSWQYBSABKARIAEIKCghyZXNvdXJjZSLKAQoI",
            "RmFjaWxpdHkSCgoCaWQYASABKAQSDAoEdHlwZRgCIAEoCRIZChFyZWxhdGVk",
            "VHJhY2tQYXJ0cxgDIAMoBBIxCgl0YXNrVHlwZXMYBCADKAsyHi5hbGdvX2lm",
            "YWNlX2V2YWx1YXRvci5UYXNrVHlwZRIeChZzaW11bHRhbmVvdXNVc2FnZUNv",
            "dW50GAUgASgNEjYKCnRpbWVXaW5kb3cYBiABKAsyIi5hbGdvX2lmYWNlX2V2",
            "YWx1YXRvci5UaW1lSW50ZXJ2YWwi0QEKCVRyYWNrUGFydBIKCgJpZBgBIAEo",
            "BBIxCgR0eXBlGAIgASgOMiMuYWxnb19pZmFjZV9ldmFsdWF0b3IuVHJhY2tQ",
            "YXJ0VHlwZRINCgVhU2lkZRgDIAMoBBINCgViU2lkZRgEIAMoBBIOCgZsZW5n",
            "dGgYBSABKAESDAoEbmFtZRgGIAEoCRIaChJzYXdNb3ZlbWVudEFsbG93ZWQY",
            "ByABKAgSFgoOcGFya2luZ0FsbG93ZWQYCCABKAgSFQoNaXNFbGVjdHJpZmll",
            "ZBgJIAEoCCJnCghUYXNrVHlwZRI+CgpwcmVkZWZpbmVkGAEgASgOMiguYWxn",
            "b19pZmFjZV9ldmFsdWF0b3IuUHJlZGVmaW5lZFRhc2tUeXBlSAASDwoFb3Ro",
            "ZXIYAiABKAlIAEIKCgh0YXNrVHlwZSJhChRXYWxraW5nRGlzdGFuY2VFbnRy",
            "eRIXCg9mcm9tVHJhY2tQYXJ0SWQYASABKAQSFQoNdG9UcmFja1BhcnRJZBgC",
            "IAEoBBIZChFkaXN0YW5jZUluU2Vjb25kcxgDIAEoASqDAQoNVHJhY2tQYXJ0",
            "VHlwZRIMCghSYWlsUm9hZBAAEgoKBlN3aXRjaBABEhEKDUVuZ2xpc2hTd2l0",
            "Y2gQAhIZChFIYWxmRW5nbGlzaFN3aXRjaBADGgIIARIQCgxJbnRlcnNlY3Rp",
            "b24QBBIKCgZCdW1wZXIQBRIMCghCdWlsZGluZxAGKpoBChJQcmVkZWZpbmVk",
            "VGFza1R5cGUSCAoETW92ZRAAEgkKBVNwbGl0EAESCwoHQ29tYmluZRACEggK",
            "BFdhaXQQAxIKCgZBcnJpdmUQBBIICgRFeGl0EAUSCwoHV2Fsa2luZxAGEgkK",
            "BUJyZWFrEAcSDgoKTm9uU2VydmljZRAIEg0KCUJlZ2luTW92ZRAJEgsKB0Vu",
            "ZE1vdmUQCiooCgRTaWRlEgoKBk5vU2lkZRAAEgUKAUEQARIFCgFCEAISBgoC",
            "QUIQA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AlgoIfaceEvaluator.UtilitiesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AlgoIfaceEvaluator.TrackPartType), typeof(global::AlgoIfaceEvaluator.PredefinedTaskType), typeof(global::AlgoIfaceEvaluator.Side), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIfaceEvaluator.Location), global::AlgoIfaceEvaluator.Location.Parser, new[]{ "TrackParts", "Facilities", "TaskTypes", "MovementConstant", "MovementTrackCoefficient", "MovementSwitchCoefficient", "DistanceEntries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIfaceEvaluator.Resource), global::AlgoIfaceEvaluator.Resource.Parser, new[]{ "Name", "TrackPartId", "FacilityId", "StaffId" }, new[]{ "Resource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIfaceEvaluator.Facility), global::AlgoIfaceEvaluator.Facility.Parser, new[]{ "Id", "Type", "RelatedTrackParts", "TaskTypes", "SimultaneousUsageCount", "TimeWindow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIfaceEvaluator.TrackPart), global::AlgoIfaceEvaluator.TrackPart.Parser, new[]{ "Id", "Type", "ASide", "BSide", "Length", "Name", "SawMovementAllowed", "ParkingAllowed", "IsElectrified" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIfaceEvaluator.TaskType), global::AlgoIfaceEvaluator.TaskType.Parser, new[]{ "Predefined", "Other" }, new[]{ "TaskType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIfaceEvaluator.WalkingDistanceEntry), global::AlgoIfaceEvaluator.WalkingDistanceEntry.Parser, new[]{ "FromTrackPartId", "ToTrackPartId", "DistanceInSeconds" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TrackPartType {
    [pbr::OriginalName("RailRoad")] RailRoad = 0,
    /// <summary>
    /// Switches
    /// </summary>
    [pbr::OriginalName("Switch")] Switch = 1,
    [pbr::OriginalName("EnglishSwitch")] EnglishSwitch = 2,
    [global::System.ObsoleteAttribute]
    [pbr::OriginalName("HalfEnglishSwitch")] HalfEnglishSwitch = 3,
    /// <summary>
    /// Other
    /// </summary>
    [pbr::OriginalName("Intersection")] Intersection = 4,
    [pbr::OriginalName("Bumper")] Bumper = 5,
    /// <summary>
    /// Do not add trackparts with this type when sending to HIP.
    /// </summary>
    [pbr::OriginalName("Building")] Building = 6,
  }

  public enum PredefinedTaskType {
    /// <summary>
    /// Task represents a shunting unit moving from one location to another location.
    /// </summary>
    [pbr::OriginalName("Move")] Move = 0,
    /// <summary>
    /// Task represents a shunting unit splitting into multiple shunting units.
    /// </summary>
    [pbr::OriginalName("Split")] Split = 1,
    /// <summary>
    /// Task represents two shunting units combining into one shunting unit.
    /// </summary>
    [pbr::OriginalName("Combine")] Combine = 2,
    /// <summary>
    /// Task represents a shunting unit being parked on a track.
    /// </summary>
    [pbr::OriginalName("Wait")] Wait = 3,
    /// <summary>
    /// Task represents the arrival of a shunting unit on the facility.
    /// </summary>
    [pbr::OriginalName("Arrive")] Arrive = 4,
    /// <summary>
    /// Task represents the departure of a shunting unit on the facility.
    /// </summary>
    [pbr::OriginalName("Exit")] Exit = 5,
    /// <summary>
    /// Task represents the reversal of a shunting unit.
    /// </summary>
    [pbr::OriginalName("Walking")] Walking = 6,
    /// <summary>
    /// Task represents the break of a member of staff.
    /// </summary>
    [pbr::OriginalName("Break")] Break = 7,
    /// <summary>
    /// Non-Service traffic that blocks the infrastructure
    /// </summary>
    [pbr::OriginalName("NonService")] NonService = 8,
    /// <summary>
    ///TEMP
    /// </summary>
    [pbr::OriginalName("BeginMove")] BeginMove = 9,
    /// <summary>
    ///TEMP
    /// </summary>
    [pbr::OriginalName("EndMove")] EndMove = 10,
  }

  public enum Side {
    [pbr::OriginalName("NoSide")] NoSide = 0,
    [pbr::OriginalName("A")] A = 1,
    [pbr::OriginalName("B")] B = 2,
    [pbr::OriginalName("AB")] Ab = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A Location contains the part of the problem specification which is "fixed",
  /// meaning that everything in the following message does not change on a regular basis.
  /// Practically speaking, Location contains a definition for the track and facilities.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIfaceEvaluator.LocationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location(Location other) : this() {
      trackParts_ = other.trackParts_.Clone();
      facilities_ = other.facilities_.Clone();
      taskTypes_ = other.taskTypes_.Clone();
      movementConstant_ = other.movementConstant_;
      movementTrackCoefficient_ = other.movementTrackCoefficient_;
      movementSwitchCoefficient_ = other.movementSwitchCoefficient_;
      distanceEntries_ = other.distanceEntries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "trackParts" field.</summary>
    public const int TrackPartsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AlgoIfaceEvaluator.TrackPart> _repeated_trackParts_codec
        = pb::FieldCodec.ForMessage(10, global::AlgoIfaceEvaluator.TrackPart.Parser);
    private readonly pbc::RepeatedField<global::AlgoIfaceEvaluator.TrackPart> trackParts_ = new pbc::RepeatedField<global::AlgoIfaceEvaluator.TrackPart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIfaceEvaluator.TrackPart> TrackParts {
      get { return trackParts_; }
    }

    /// <summary>Field number for the "facilities" field.</summary>
    public const int FacilitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AlgoIfaceEvaluator.Facility> _repeated_facilities_codec
        = pb::FieldCodec.ForMessage(18, global::AlgoIfaceEvaluator.Facility.Parser);
    private readonly pbc::RepeatedField<global::AlgoIfaceEvaluator.Facility> facilities_ = new pbc::RepeatedField<global::AlgoIfaceEvaluator.Facility>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIfaceEvaluator.Facility> Facilities {
      get { return facilities_; }
    }

    /// <summary>Field number for the "taskTypes" field.</summary>
    public const int TaskTypesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AlgoIfaceEvaluator.TaskType> _repeated_taskTypes_codec
        = pb::FieldCodec.ForMessage(26, global::AlgoIfaceEvaluator.TaskType.Parser);
    private readonly pbc::RepeatedField<global::AlgoIfaceEvaluator.TaskType> taskTypes_ = new pbc::RepeatedField<global::AlgoIfaceEvaluator.TaskType>();
    /// <summary>
    /// A list of all known task types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIfaceEvaluator.TaskType> TaskTypes {
      get { return taskTypes_; }
    }

    /// <summary>Field number for the "movementConstant" field.</summary>
    public const int MovementConstantFieldNumber = 4;
    private int movementConstant_;
    /// <summary>
    /// The constant of a movement (always the case)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MovementConstant {
      get { return movementConstant_; }
      set {
        movementConstant_ = value;
      }
    }

    /// <summary>Field number for the "movementTrackCoefficient" field.</summary>
    public const int MovementTrackCoefficientFieldNumber = 5;
    private int movementTrackCoefficient_;
    /// <summary>
    /// The time coefficient of a track in the route of a movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MovementTrackCoefficient {
      get { return movementTrackCoefficient_; }
      set {
        movementTrackCoefficient_ = value;
      }
    }

    /// <summary>Field number for the "movementSwitchCoefficient" field.</summary>
    public const int MovementSwitchCoefficientFieldNumber = 6;
    private int movementSwitchCoefficient_;
    /// <summary>
    /// The switch coefficient of a switch in the route of a movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MovementSwitchCoefficient {
      get { return movementSwitchCoefficient_; }
      set {
        movementSwitchCoefficient_ = value;
      }
    }

    /// <summary>Field number for the "distanceEntries" field.</summary>
    public const int DistanceEntriesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::AlgoIfaceEvaluator.WalkingDistanceEntry> _repeated_distanceEntries_codec
        = pb::FieldCodec.ForMessage(58, global::AlgoIfaceEvaluator.WalkingDistanceEntry.Parser);
    private readonly pbc::RepeatedField<global::AlgoIfaceEvaluator.WalkingDistanceEntry> distanceEntries_ = new pbc::RepeatedField<global::AlgoIfaceEvaluator.WalkingDistanceEntry>();
    /// <summary>
    /// The entries of the distance matrix for the walking distances
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIfaceEvaluator.WalkingDistanceEntry> DistanceEntries {
      get { return distanceEntries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!trackParts_.Equals(other.trackParts_)) return false;
      if(!facilities_.Equals(other.facilities_)) return false;
      if(!taskTypes_.Equals(other.taskTypes_)) return false;
      if (MovementConstant != other.MovementConstant) return false;
      if (MovementTrackCoefficient != other.MovementTrackCoefficient) return false;
      if (MovementSwitchCoefficient != other.MovementSwitchCoefficient) return false;
      if(!distanceEntries_.Equals(other.distanceEntries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= trackParts_.GetHashCode();
      hash ^= facilities_.GetHashCode();
      hash ^= taskTypes_.GetHashCode();
      if (MovementConstant != 0) hash ^= MovementConstant.GetHashCode();
      if (MovementTrackCoefficient != 0) hash ^= MovementTrackCoefficient.GetHashCode();
      if (MovementSwitchCoefficient != 0) hash ^= MovementSwitchCoefficient.GetHashCode();
      hash ^= distanceEntries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      trackParts_.WriteTo(output, _repeated_trackParts_codec);
      facilities_.WriteTo(output, _repeated_facilities_codec);
      taskTypes_.WriteTo(output, _repeated_taskTypes_codec);
      if (MovementConstant != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(MovementConstant);
      }
      if (MovementTrackCoefficient != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(MovementTrackCoefficient);
      }
      if (MovementSwitchCoefficient != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(MovementSwitchCoefficient);
      }
      distanceEntries_.WriteTo(output, _repeated_distanceEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      trackParts_.WriteTo(ref output, _repeated_trackParts_codec);
      facilities_.WriteTo(ref output, _repeated_facilities_codec);
      taskTypes_.WriteTo(ref output, _repeated_taskTypes_codec);
      if (MovementConstant != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(MovementConstant);
      }
      if (MovementTrackCoefficient != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(MovementTrackCoefficient);
      }
      if (MovementSwitchCoefficient != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(MovementSwitchCoefficient);
      }
      distanceEntries_.WriteTo(ref output, _repeated_distanceEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += trackParts_.CalculateSize(_repeated_trackParts_codec);
      size += facilities_.CalculateSize(_repeated_facilities_codec);
      size += taskTypes_.CalculateSize(_repeated_taskTypes_codec);
      if (MovementConstant != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MovementConstant);
      }
      if (MovementTrackCoefficient != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MovementTrackCoefficient);
      }
      if (MovementSwitchCoefficient != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MovementSwitchCoefficient);
      }
      size += distanceEntries_.CalculateSize(_repeated_distanceEntries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      trackParts_.Add(other.trackParts_);
      facilities_.Add(other.facilities_);
      taskTypes_.Add(other.taskTypes_);
      if (other.MovementConstant != 0) {
        MovementConstant = other.MovementConstant;
      }
      if (other.MovementTrackCoefficient != 0) {
        MovementTrackCoefficient = other.MovementTrackCoefficient;
      }
      if (other.MovementSwitchCoefficient != 0) {
        MovementSwitchCoefficient = other.MovementSwitchCoefficient;
      }
      distanceEntries_.Add(other.distanceEntries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            trackParts_.AddEntriesFrom(input, _repeated_trackParts_codec);
            break;
          }
          case 18: {
            facilities_.AddEntriesFrom(input, _repeated_facilities_codec);
            break;
          }
          case 26: {
            taskTypes_.AddEntriesFrom(input, _repeated_taskTypes_codec);
            break;
          }
          case 32: {
            MovementConstant = input.ReadSInt32();
            break;
          }
          case 40: {
            MovementTrackCoefficient = input.ReadSInt32();
            break;
          }
          case 48: {
            MovementSwitchCoefficient = input.ReadSInt32();
            break;
          }
          case 58: {
            distanceEntries_.AddEntriesFrom(input, _repeated_distanceEntries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            trackParts_.AddEntriesFrom(ref input, _repeated_trackParts_codec);
            break;
          }
          case 18: {
            facilities_.AddEntriesFrom(ref input, _repeated_facilities_codec);
            break;
          }
          case 26: {
            taskTypes_.AddEntriesFrom(ref input, _repeated_taskTypes_codec);
            break;
          }
          case 32: {
            MovementConstant = input.ReadSInt32();
            break;
          }
          case 40: {
            MovementTrackCoefficient = input.ReadSInt32();
            break;
          }
          case 48: {
            MovementSwitchCoefficient = input.ReadSInt32();
            break;
          }
          case 58: {
            distanceEntries_.AddEntriesFrom(ref input, _repeated_distanceEntries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Resource : pb::IMessage<Resource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIfaceEvaluator.LocationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource(Resource other) : this() {
      name_ = other.name_;
      switch (other.ResourceCase) {
        case ResourceOneofCase.TrackPartId:
          TrackPartId = other.TrackPartId;
          break;
        case ResourceOneofCase.FacilityId:
          FacilityId = other.FacilityId;
          break;
        case ResourceOneofCase.StaffId:
          StaffId = other.StaffId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of this resource
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trackPartId" field.</summary>
    public const int TrackPartIdFieldNumber = 3;
    /// <summary>
    /// Set this field if this Resource is a TrackPart.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TrackPartId {
      get { return HasTrackPartId ? (ulong) resource_ : 0UL; }
      set {
        resource_ = value;
        resourceCase_ = ResourceOneofCase.TrackPartId;
      }
    }
    /// <summary>Gets whether the "trackPartId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrackPartId {
      get { return resourceCase_ == ResourceOneofCase.TrackPartId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "trackPartId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrackPartId() {
      if (HasTrackPartId) {
        ClearResource();
      }
    }

    /// <summary>Field number for the "facilityId" field.</summary>
    public const int FacilityIdFieldNumber = 4;
    /// <summary>
    /// Set this field if this Resource is a Facility.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FacilityId {
      get { return HasFacilityId ? (ulong) resource_ : 0UL; }
      set {
        resource_ = value;
        resourceCase_ = ResourceOneofCase.FacilityId;
      }
    }
    /// <summary>Gets whether the "facilityId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFacilityId {
      get { return resourceCase_ == ResourceOneofCase.FacilityId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "facilityId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFacilityId() {
      if (HasFacilityId) {
        ClearResource();
      }
    }

    /// <summary>Field number for the "staffId" field.</summary>
    public const int StaffIdFieldNumber = 5;
    /// <summary>
    /// Set this field if this Resource is a Staff member.
    /// Members of staff are defined in scenario.proto
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong StaffId {
      get { return HasStaffId ? (ulong) resource_ : 0UL; }
      set {
        resource_ = value;
        resourceCase_ = ResourceOneofCase.StaffId;
      }
    }
    /// <summary>Gets whether the "staffId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStaffId {
      get { return resourceCase_ == ResourceOneofCase.StaffId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "staffId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStaffId() {
      if (HasStaffId) {
        ClearResource();
      }
    }

    private object resource_;
    /// <summary>Enum of possible cases for the "resource" oneof.</summary>
    public enum ResourceOneofCase {
      None = 0,
      TrackPartId = 3,
      FacilityId = 4,
      StaffId = 5,
    }
    private ResourceOneofCase resourceCase_ = ResourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceOneofCase ResourceCase {
      get { return resourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResource() {
      resourceCase_ = ResourceOneofCase.None;
      resource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (TrackPartId != other.TrackPartId) return false;
      if (FacilityId != other.FacilityId) return false;
      if (StaffId != other.StaffId) return false;
      if (ResourceCase != other.ResourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (HasTrackPartId) hash ^= TrackPartId.GetHashCode();
      if (HasFacilityId) hash ^= FacilityId.GetHashCode();
      if (HasStaffId) hash ^= StaffId.GetHashCode();
      hash ^= (int) resourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasTrackPartId) {
        output.WriteRawTag(24);
        output.WriteUInt64(TrackPartId);
      }
      if (HasFacilityId) {
        output.WriteRawTag(32);
        output.WriteUInt64(FacilityId);
      }
      if (HasStaffId) {
        output.WriteRawTag(40);
        output.WriteUInt64(StaffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasTrackPartId) {
        output.WriteRawTag(24);
        output.WriteUInt64(TrackPartId);
      }
      if (HasFacilityId) {
        output.WriteRawTag(32);
        output.WriteUInt64(FacilityId);
      }
      if (HasStaffId) {
        output.WriteRawTag(40);
        output.WriteUInt64(StaffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasTrackPartId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TrackPartId);
      }
      if (HasFacilityId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FacilityId);
      }
      if (HasStaffId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StaffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      switch (other.ResourceCase) {
        case ResourceOneofCase.TrackPartId:
          TrackPartId = other.TrackPartId;
          break;
        case ResourceOneofCase.FacilityId:
          FacilityId = other.FacilityId;
          break;
        case ResourceOneofCase.StaffId:
          StaffId = other.StaffId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            TrackPartId = input.ReadUInt64();
            break;
          }
          case 32: {
            FacilityId = input.ReadUInt64();
            break;
          }
          case 40: {
            StaffId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            TrackPartId = input.ReadUInt64();
            break;
          }
          case 32: {
            FacilityId = input.ReadUInt64();
            break;
          }
          case 40: {
            StaffId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A facility is an object at the location not part of the rails.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Facility : pb::IMessage<Facility>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Facility> _parser = new pb::MessageParser<Facility>(() => new Facility());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Facility> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIfaceEvaluator.LocationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Facility() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Facility(Facility other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      relatedTrackParts_ = other.relatedTrackParts_.Clone();
      taskTypes_ = other.taskTypes_.Clone();
      simultaneousUsageCount_ = other.simultaneousUsageCount_;
      timeWindow_ = other.timeWindow_ != null ? other.timeWindow_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Facility Clone() {
      return new Facility(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// A unique ID which is referenced by other messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relatedTrackParts" field.</summary>
    public const int RelatedTrackPartsFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_relatedTrackParts_codec
        = pb::FieldCodec.ForUInt64(26);
    private readonly pbc::RepeatedField<ulong> relatedTrackParts_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// The TrackPart IDs this Facility can be reached from / operates on / etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> RelatedTrackParts {
      get { return relatedTrackParts_; }
    }

    /// <summary>Field number for the "taskTypes" field.</summary>
    public const int TaskTypesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::AlgoIfaceEvaluator.TaskType> _repeated_taskTypes_codec
        = pb::FieldCodec.ForMessage(34, global::AlgoIfaceEvaluator.TaskType.Parser);
    private readonly pbc::RepeatedField<global::AlgoIfaceEvaluator.TaskType> taskTypes_ = new pbc::RepeatedField<global::AlgoIfaceEvaluator.TaskType>();
    /// <summary>
    /// Possible tasks at this facility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIfaceEvaluator.TaskType> TaskTypes {
      get { return taskTypes_; }
    }

    /// <summary>Field number for the "simultaneousUsageCount" field.</summary>
    public const int SimultaneousUsageCountFieldNumber = 5;
    private uint simultaneousUsageCount_;
    /// <summary>
    /// The maximum number of ShuntingUnits which can use this resource at the same time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SimultaneousUsageCount {
      get { return simultaneousUsageCount_; }
      set {
        simultaneousUsageCount_ = value;
      }
    }

    /// <summary>Field number for the "timeWindow" field.</summary>
    public const int TimeWindowFieldNumber = 6;
    private global::AlgoIfaceEvaluator.TimeInterval timeWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AlgoIfaceEvaluator.TimeInterval TimeWindow {
      get { return timeWindow_; }
      set {
        timeWindow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Facility);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Facility other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if(!relatedTrackParts_.Equals(other.relatedTrackParts_)) return false;
      if(!taskTypes_.Equals(other.taskTypes_)) return false;
      if (SimultaneousUsageCount != other.SimultaneousUsageCount) return false;
      if (!object.Equals(TimeWindow, other.TimeWindow)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      hash ^= relatedTrackParts_.GetHashCode();
      hash ^= taskTypes_.GetHashCode();
      if (SimultaneousUsageCount != 0) hash ^= SimultaneousUsageCount.GetHashCode();
      if (timeWindow_ != null) hash ^= TimeWindow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      relatedTrackParts_.WriteTo(output, _repeated_relatedTrackParts_codec);
      taskTypes_.WriteTo(output, _repeated_taskTypes_codec);
      if (SimultaneousUsageCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SimultaneousUsageCount);
      }
      if (timeWindow_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      relatedTrackParts_.WriteTo(ref output, _repeated_relatedTrackParts_codec);
      taskTypes_.WriteTo(ref output, _repeated_taskTypes_codec);
      if (SimultaneousUsageCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SimultaneousUsageCount);
      }
      if (timeWindow_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += relatedTrackParts_.CalculateSize(_repeated_relatedTrackParts_codec);
      size += taskTypes_.CalculateSize(_repeated_taskTypes_codec);
      if (SimultaneousUsageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SimultaneousUsageCount);
      }
      if (timeWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeWindow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Facility other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      relatedTrackParts_.Add(other.relatedTrackParts_);
      taskTypes_.Add(other.taskTypes_);
      if (other.SimultaneousUsageCount != 0) {
        SimultaneousUsageCount = other.SimultaneousUsageCount;
      }
      if (other.timeWindow_ != null) {
        if (timeWindow_ == null) {
          TimeWindow = new global::AlgoIfaceEvaluator.TimeInterval();
        }
        TimeWindow.MergeFrom(other.TimeWindow);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            relatedTrackParts_.AddEntriesFrom(input, _repeated_relatedTrackParts_codec);
            break;
          }
          case 34: {
            taskTypes_.AddEntriesFrom(input, _repeated_taskTypes_codec);
            break;
          }
          case 40: {
            SimultaneousUsageCount = input.ReadUInt32();
            break;
          }
          case 50: {
            if (timeWindow_ == null) {
              TimeWindow = new global::AlgoIfaceEvaluator.TimeInterval();
            }
            input.ReadMessage(TimeWindow);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            relatedTrackParts_.AddEntriesFrom(ref input, _repeated_relatedTrackParts_codec);
            break;
          }
          case 34: {
            taskTypes_.AddEntriesFrom(ref input, _repeated_taskTypes_codec);
            break;
          }
          case 40: {
            SimultaneousUsageCount = input.ReadUInt32();
            break;
          }
          case 50: {
            if (timeWindow_ == null) {
              TimeWindow = new global::AlgoIfaceEvaluator.TimeInterval();
            }
            input.ReadMessage(TimeWindow);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A TrackPart forms a single node in the rail graph.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TrackPart : pb::IMessage<TrackPart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackPart> _parser = new pb::MessageParser<TrackPart>(() => new TrackPart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackPart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIfaceEvaluator.LocationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackPart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackPart(TrackPart other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      aSide_ = other.aSide_.Clone();
      bSide_ = other.bSide_.Clone();
      length_ = other.length_;
      name_ = other.name_;
      sawMovementAllowed_ = other.sawMovementAllowed_;
      parkingAllowed_ = other.parkingAllowed_;
      isElectrified_ = other.isElectrified_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackPart Clone() {
      return new TrackPart(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// A unique ID; this is used to reference this TrackPart.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::AlgoIfaceEvaluator.TrackPartType type_ = global::AlgoIfaceEvaluator.TrackPartType.RailRoad;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AlgoIfaceEvaluator.TrackPartType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "aSide" field.</summary>
    public const int ASideFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_aSide_codec
        = pb::FieldCodec.ForUInt64(26);
    private readonly pbc::RepeatedField<ulong> aSide_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// Tracks this TrackPart are connected to are defined through the aSide and bSide.
    /// An explanation per TrackPartType:
    /// RailRoad             aSide contains one end, and bSide the other
    /// Switch:              aSide is the permanent track (that's one track), and bSide contains the branching/option tracks (that's two).
    /// EnglishSwitch:       Define: AR = aSide[0], AL = aSide[1], BR = bSide[0], BL = bSide[1]. Then: AR is connected to BL and BR. AL is connected to BL and BR.
    /// HalfEnglishSwitch:   Define: AR = aSide[0], AL = aSide[1], BR = bSide[0], BL = bSide[1]. Then: AR is connected to BL and BR. AL is connected to BL (but NOT BR).
    /// Intersection:        Both parts of an ongoing track are in the same *Side.
    /// Bumper:              aSide contains the track part. bSide is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> ASide {
      get { return aSide_; }
    }

    /// <summary>Field number for the "bSide" field.</summary>
    public const int BSideFieldNumber = 4;
    private static readonly pb::FieldCodec<ulong> _repeated_bSide_codec
        = pb::FieldCodec.ForUInt64(34);
    private readonly pbc::RepeatedField<ulong> bSide_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> BSide {
      get { return bSide_; }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 5;
    private double length_;
    /// <summary>
    /// Length of the track in meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// Name of the TrackPart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sawMovementAllowed" field.</summary>
    public const int SawMovementAllowedFieldNumber = 7;
    private bool sawMovementAllowed_;
    /// <summary>
    /// For railroads: whether or not a saw movement ('kopmaken') is allowed on this railroad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SawMovementAllowed {
      get { return sawMovementAllowed_; }
      set {
        sawMovementAllowed_ = value;
      }
    }

    /// <summary>Field number for the "parkingAllowed" field.</summary>
    public const int ParkingAllowedFieldNumber = 8;
    private bool parkingAllowed_;
    /// <summary>
    /// For railroads: whether or not parking is allowed on this railroad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ParkingAllowed {
      get { return parkingAllowed_; }
      set {
        parkingAllowed_ = value;
      }
    }

    /// <summary>Field number for the "isElectrified" field.</summary>
    public const int IsElectrifiedFieldNumber = 9;
    private bool isElectrified_;
    /// <summary>
    /// Denotes whether this trackpart is electrified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsElectrified {
      get { return isElectrified_; }
      set {
        isElectrified_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackPart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackPart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if(!aSide_.Equals(other.aSide_)) return false;
      if(!bSide_.Equals(other.bSide_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Length, other.Length)) return false;
      if (Name != other.Name) return false;
      if (SawMovementAllowed != other.SawMovementAllowed) return false;
      if (ParkingAllowed != other.ParkingAllowed) return false;
      if (IsElectrified != other.IsElectrified) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Type != global::AlgoIfaceEvaluator.TrackPartType.RailRoad) hash ^= Type.GetHashCode();
      hash ^= aSide_.GetHashCode();
      hash ^= bSide_.GetHashCode();
      if (Length != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Length);
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SawMovementAllowed != false) hash ^= SawMovementAllowed.GetHashCode();
      if (ParkingAllowed != false) hash ^= ParkingAllowed.GetHashCode();
      if (IsElectrified != false) hash ^= IsElectrified.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type != global::AlgoIfaceEvaluator.TrackPartType.RailRoad) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      aSide_.WriteTo(output, _repeated_aSide_codec);
      bSide_.WriteTo(output, _repeated_bSide_codec);
      if (Length != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Length);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (SawMovementAllowed != false) {
        output.WriteRawTag(56);
        output.WriteBool(SawMovementAllowed);
      }
      if (ParkingAllowed != false) {
        output.WriteRawTag(64);
        output.WriteBool(ParkingAllowed);
      }
      if (IsElectrified != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsElectrified);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type != global::AlgoIfaceEvaluator.TrackPartType.RailRoad) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      aSide_.WriteTo(ref output, _repeated_aSide_codec);
      bSide_.WriteTo(ref output, _repeated_bSide_codec);
      if (Length != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Length);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (SawMovementAllowed != false) {
        output.WriteRawTag(56);
        output.WriteBool(SawMovementAllowed);
      }
      if (ParkingAllowed != false) {
        output.WriteRawTag(64);
        output.WriteBool(ParkingAllowed);
      }
      if (IsElectrified != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsElectrified);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Type != global::AlgoIfaceEvaluator.TrackPartType.RailRoad) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += aSide_.CalculateSize(_repeated_aSide_codec);
      size += bSide_.CalculateSize(_repeated_bSide_codec);
      if (Length != 0D) {
        size += 1 + 8;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SawMovementAllowed != false) {
        size += 1 + 1;
      }
      if (ParkingAllowed != false) {
        size += 1 + 1;
      }
      if (IsElectrified != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackPart other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Type != global::AlgoIfaceEvaluator.TrackPartType.RailRoad) {
        Type = other.Type;
      }
      aSide_.Add(other.aSide_);
      bSide_.Add(other.bSide_);
      if (other.Length != 0D) {
        Length = other.Length;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SawMovementAllowed != false) {
        SawMovementAllowed = other.SawMovementAllowed;
      }
      if (other.ParkingAllowed != false) {
        ParkingAllowed = other.ParkingAllowed;
      }
      if (other.IsElectrified != false) {
        IsElectrified = other.IsElectrified;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Type = (global::AlgoIfaceEvaluator.TrackPartType) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            aSide_.AddEntriesFrom(input, _repeated_aSide_codec);
            break;
          }
          case 34:
          case 32: {
            bSide_.AddEntriesFrom(input, _repeated_bSide_codec);
            break;
          }
          case 41: {
            Length = input.ReadDouble();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            SawMovementAllowed = input.ReadBool();
            break;
          }
          case 64: {
            ParkingAllowed = input.ReadBool();
            break;
          }
          case 72: {
            IsElectrified = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Type = (global::AlgoIfaceEvaluator.TrackPartType) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            aSide_.AddEntriesFrom(ref input, _repeated_aSide_codec);
            break;
          }
          case 34:
          case 32: {
            bSide_.AddEntriesFrom(ref input, _repeated_bSide_codec);
            break;
          }
          case 41: {
            Length = input.ReadDouble();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            SawMovementAllowed = input.ReadBool();
            break;
          }
          case 64: {
            ParkingAllowed = input.ReadBool();
            break;
          }
          case 72: {
            IsElectrified = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TaskType : pb::IMessage<TaskType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskType> _parser = new pb::MessageParser<TaskType>(() => new TaskType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIfaceEvaluator.LocationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskType(TaskType other) : this() {
      switch (other.TaskTypeCase) {
        case TaskTypeOneofCase.Predefined:
          Predefined = other.Predefined;
          break;
        case TaskTypeOneofCase.Other:
          Other = other.Other;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskType Clone() {
      return new TaskType(this);
    }

    /// <summary>Field number for the "predefined" field.</summary>
    public const int PredefinedFieldNumber = 1;
    /// <summary>
    /// If the task type maps to one of PredefinedTaskType, use this type here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AlgoIfaceEvaluator.PredefinedTaskType Predefined {
      get { return HasPredefined ? (global::AlgoIfaceEvaluator.PredefinedTaskType) taskType_ : global::AlgoIfaceEvaluator.PredefinedTaskType.Move; }
      set {
        taskType_ = value;
        taskTypeCase_ = TaskTypeOneofCase.Predefined;
      }
    }
    /// <summary>Gets whether the "predefined" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPredefined {
      get { return taskTypeCase_ == TaskTypeOneofCase.Predefined; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "predefined" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPredefined() {
      if (HasPredefined) {
        ClearTaskType();
      }
    }

    /// <summary>Field number for the "other" field.</summary>
    public const int OtherFieldNumber = 2;
    /// <summary>
    /// Otherwise, specify a custom name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Other {
      get { return HasOther ? (string) taskType_ : ""; }
      set {
        taskType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        taskTypeCase_ = TaskTypeOneofCase.Other;
      }
    }
    /// <summary>Gets whether the "other" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOther {
      get { return taskTypeCase_ == TaskTypeOneofCase.Other; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "other" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOther() {
      if (HasOther) {
        ClearTaskType();
      }
    }

    private object taskType_;
    /// <summary>Enum of possible cases for the "taskType" oneof.</summary>
    public enum TaskTypeOneofCase {
      None = 0,
      Predefined = 1,
      Other = 2,
    }
    private TaskTypeOneofCase taskTypeCase_ = TaskTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskTypeOneofCase TaskTypeCase {
      get { return taskTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskType() {
      taskTypeCase_ = TaskTypeOneofCase.None;
      taskType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Predefined != other.Predefined) return false;
      if (Other != other.Other) return false;
      if (TaskTypeCase != other.TaskTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPredefined) hash ^= Predefined.GetHashCode();
      if (HasOther) hash ^= Other.GetHashCode();
      hash ^= (int) taskTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPredefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Predefined);
      }
      if (HasOther) {
        output.WriteRawTag(18);
        output.WriteString(Other);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPredefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Predefined);
      }
      if (HasOther) {
        output.WriteRawTag(18);
        output.WriteString(Other);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPredefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Predefined);
      }
      if (HasOther) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Other);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskType other) {
      if (other == null) {
        return;
      }
      switch (other.TaskTypeCase) {
        case TaskTypeOneofCase.Predefined:
          Predefined = other.Predefined;
          break;
        case TaskTypeOneofCase.Other:
          Other = other.Other;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            taskType_ = input.ReadEnum();
            taskTypeCase_ = TaskTypeOneofCase.Predefined;
            break;
          }
          case 18: {
            Other = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            taskType_ = input.ReadEnum();
            taskTypeCase_ = TaskTypeOneofCase.Predefined;
            break;
          }
          case 18: {
            Other = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WalkingDistanceEntry : pb::IMessage<WalkingDistanceEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WalkingDistanceEntry> _parser = new pb::MessageParser<WalkingDistanceEntry>(() => new WalkingDistanceEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WalkingDistanceEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIfaceEvaluator.LocationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WalkingDistanceEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WalkingDistanceEntry(WalkingDistanceEntry other) : this() {
      fromTrackPartId_ = other.fromTrackPartId_;
      toTrackPartId_ = other.toTrackPartId_;
      distanceInSeconds_ = other.distanceInSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WalkingDistanceEntry Clone() {
      return new WalkingDistanceEntry(this);
    }

    /// <summary>Field number for the "fromTrackPartId" field.</summary>
    public const int FromTrackPartIdFieldNumber = 1;
    private ulong fromTrackPartId_;
    /// <summary>
    /// The id of the origin track part.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FromTrackPartId {
      get { return fromTrackPartId_; }
      set {
        fromTrackPartId_ = value;
      }
    }

    /// <summary>Field number for the "toTrackPartId" field.</summary>
    public const int ToTrackPartIdFieldNumber = 2;
    private ulong toTrackPartId_;
    /// <summary>
    /// The id of the destination track part.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ToTrackPartId {
      get { return toTrackPartId_; }
      set {
        toTrackPartId_ = value;
      }
    }

    /// <summary>Field number for the "distanceInSeconds" field.</summary>
    public const int DistanceInSecondsFieldNumber = 3;
    private double distanceInSeconds_;
    /// <summary>
    /// The walking distance between origin and destination in seconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DistanceInSeconds {
      get { return distanceInSeconds_; }
      set {
        distanceInSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WalkingDistanceEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WalkingDistanceEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromTrackPartId != other.FromTrackPartId) return false;
      if (ToTrackPartId != other.ToTrackPartId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DistanceInSeconds, other.DistanceInSeconds)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FromTrackPartId != 0UL) hash ^= FromTrackPartId.GetHashCode();
      if (ToTrackPartId != 0UL) hash ^= ToTrackPartId.GetHashCode();
      if (DistanceInSeconds != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DistanceInSeconds);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FromTrackPartId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromTrackPartId);
      }
      if (ToTrackPartId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToTrackPartId);
      }
      if (DistanceInSeconds != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(DistanceInSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FromTrackPartId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromTrackPartId);
      }
      if (ToTrackPartId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToTrackPartId);
      }
      if (DistanceInSeconds != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(DistanceInSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FromTrackPartId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromTrackPartId);
      }
      if (ToTrackPartId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToTrackPartId);
      }
      if (DistanceInSeconds != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WalkingDistanceEntry other) {
      if (other == null) {
        return;
      }
      if (other.FromTrackPartId != 0UL) {
        FromTrackPartId = other.FromTrackPartId;
      }
      if (other.ToTrackPartId != 0UL) {
        ToTrackPartId = other.ToTrackPartId;
      }
      if (other.DistanceInSeconds != 0D) {
        DistanceInSeconds = other.DistanceInSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromTrackPartId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToTrackPartId = input.ReadUInt64();
            break;
          }
          case 25: {
            DistanceInSeconds = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FromTrackPartId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToTrackPartId = input.ReadUInt64();
            break;
          }
          case 25: {
            DistanceInSeconds = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
