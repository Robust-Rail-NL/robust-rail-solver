// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Location.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AlgoIface {

  /// <summary>Holder for reflection information generated from Location.proto</summary>
  public static partial class LocationReflection {

    #region Descriptor
    /// <summary>File descriptor for Location.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Mb2NhdGlvbi5wcm90bxIKYWxnb19pZmFjZSKIAQoITG9jYXRpb24SKQoK",
            "dHJhY2tQYXJ0cxgBIAMoCzIVLmFsZ29faWZhY2UuVHJhY2tQYXJ0EigKCmZh",
            "Y2lsaXRpZXMYAiADKAsyFC5hbGdvX2lmYWNlLkZhY2lsaXR5EicKCXRhc2tU",
            "eXBlcxgDIAMoCzIULmFsZ29faWZhY2UuVGFza1R5cGUiUQoIUmVzb3VyY2US",
            "DAoEbmFtZRgBIAEoCRIVCgt0cmFja1BhcnRJZBgDIAEoBEgAEhQKCmZhY2ls",
            "aXR5SWQYBCABKARIAEIKCghyZXNvdXJjZSKIAQoIRmFjaWxpdHkSCgoCaWQY",
            "ASABKAQSDAoEdHlwZRgCIAEoCRIZChFyZWxhdGVkVHJhY2tQYXJ0cxgDIAMo",
            "BBInCgl0YXNrVHlwZXMYBCADKAsyFC5hbGdvX2lmYWNlLlRhc2tUeXBlEh4K",
            "FnNpbXVsdGFuZW91c1VzYWdlQ291bnQYBSABKA0isAEKCVRyYWNrUGFydBIK",
            "CgJpZBgBIAEoBBInCgR0eXBlGAIgASgOMhkuYWxnb19pZmFjZS5UcmFja1Bh",
            "cnRUeXBlEg0KBWFTaWRlGAMgAygEEg0KBWJTaWRlGAQgAygEEg4KBmxlbmd0",
            "aBgFIAEoARIMCgRuYW1lGAYgASgJEhoKEnNhd01vdmVtZW50QWxsb3dlZBgH",
            "IAEoCBIWCg5wYXJraW5nQWxsb3dlZBgIIAEoCCJdCghUYXNrVHlwZRI0Cgpw",
            "cmVkZWZpbmVkGAEgASgOMh4uYWxnb19pZmFjZS5QcmVkZWZpbmVkVGFza1R5",
            "cGVIABIPCgVvdGhlchgCIAEoCUgAQgoKCHRhc2tUeXBlKnEKDVRyYWNrUGFy",
            "dFR5cGUSDAoIUmFpbFJvYWQQABIKCgZTd2l0Y2gQARIRCg1FbmdsaXNoU3dp",
            "dGNoEAISFQoRSGFsZkVuZ2xpc2hTd2l0Y2gQAxIQCgxJbnRlcnNlY3Rpb24Q",
            "BBIKCgZCdW1wZXIQBSpxChJQcmVkZWZpbmVkVGFza1R5cGUSCAoETW92ZRAA",
            "EgkKBVNwbGl0EAESCwoHQ29tYmluZRACEggKBFdhaXQQAxIKCgZBcnJpdmUQ",
            "BBIICgRFeGl0EAUSDAoIU3RhbmRPdXQQBhILCgdTdGFuZEluEAdiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AlgoIface.TrackPartType), typeof(global::AlgoIface.PredefinedTaskType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIface.Location), global::AlgoIface.Location.Parser, new[]{ "TrackParts", "Facilities", "TaskTypes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIface.Resource), global::AlgoIface.Resource.Parser, new[]{ "Name", "TrackPartId", "FacilityId" }, new[]{ "Resource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIface.Facility), global::AlgoIface.Facility.Parser, new[]{ "Id", "Type", "RelatedTrackParts", "TaskTypes", "SimultaneousUsageCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIface.TrackPart), global::AlgoIface.TrackPart.Parser, new[]{ "Id", "Type", "ASide", "BSide", "Length", "Name", "SawMovementAllowed", "ParkingAllowed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AlgoIface.TaskType), global::AlgoIface.TaskType.Parser, new[]{ "Predefined", "Other" }, new[]{ "TaskType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TrackPartType {
    [pbr::OriginalName("RailRoad")] RailRoad = 0,
    /// <summary>
    /// Switches
    /// </summary>
    [pbr::OriginalName("Switch")] Switch = 1,
    [pbr::OriginalName("EnglishSwitch")] EnglishSwitch = 2,
    [pbr::OriginalName("HalfEnglishSwitch")] HalfEnglishSwitch = 3,
    /// <summary>
    /// Other
    /// </summary>
    [pbr::OriginalName("Intersection")] Intersection = 4,
    [pbr::OriginalName("Bumper")] Bumper = 5,
  }

  public enum PredefinedTaskType {
    /// <summary>
    /// Movement
    /// </summary>
    [pbr::OriginalName("Move")] Move = 0,
    [pbr::OriginalName("Split")] Split = 1,
    [pbr::OriginalName("Combine")] Combine = 2,
    /// <summary>
    /// Special
    /// </summary>
    [pbr::OriginalName("Wait")] Wait = 3,
    [pbr::OriginalName("Arrive")] Arrive = 4,
    [pbr::OriginalName("Exit")] Exit = 5,
    [pbr::OriginalName("StandOut")] StandOut = 6,
    [pbr::OriginalName("StandIn")] StandIn = 7,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A Location contains the part of the problem specification which is "fixed",
  /// meaning that everything in the following message does not change on a regular basis.
  /// Practically speaking, Location contains a definition for the track and facilities.
  /// </summary>
  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIface.LocationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location(Location other) : this() {
      trackParts_ = other.trackParts_.Clone();
      facilities_ = other.facilities_.Clone();
      taskTypes_ = other.taskTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "trackParts" field.</summary>
    public const int TrackPartsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AlgoIface.TrackPart> _repeated_trackParts_codec
        = pb::FieldCodec.ForMessage(10, global::AlgoIface.TrackPart.Parser);
    private readonly pbc::RepeatedField<global::AlgoIface.TrackPart> trackParts_ = new pbc::RepeatedField<global::AlgoIface.TrackPart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIface.TrackPart> TrackParts {
      get { return trackParts_; }
    }

    /// <summary>Field number for the "facilities" field.</summary>
    public const int FacilitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AlgoIface.Facility> _repeated_facilities_codec
        = pb::FieldCodec.ForMessage(18, global::AlgoIface.Facility.Parser);
    private readonly pbc::RepeatedField<global::AlgoIface.Facility> facilities_ = new pbc::RepeatedField<global::AlgoIface.Facility>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIface.Facility> Facilities {
      get { return facilities_; }
    }

    /// <summary>Field number for the "taskTypes" field.</summary>
    public const int TaskTypesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AlgoIface.TaskType> _repeated_taskTypes_codec
        = pb::FieldCodec.ForMessage(26, global::AlgoIface.TaskType.Parser);
    private readonly pbc::RepeatedField<global::AlgoIface.TaskType> taskTypes_ = new pbc::RepeatedField<global::AlgoIface.TaskType>();
    /// <summary>
    /// A list of all known task types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIface.TaskType> TaskTypes {
      get { return taskTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!trackParts_.Equals(other.trackParts_)) return false;
      if(!facilities_.Equals(other.facilities_)) return false;
      if(!taskTypes_.Equals(other.taskTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= trackParts_.GetHashCode();
      hash ^= facilities_.GetHashCode();
      hash ^= taskTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      trackParts_.WriteTo(output, _repeated_trackParts_codec);
      facilities_.WriteTo(output, _repeated_facilities_codec);
      taskTypes_.WriteTo(output, _repeated_taskTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      trackParts_.WriteTo(ref output, _repeated_trackParts_codec);
      facilities_.WriteTo(ref output, _repeated_facilities_codec);
      taskTypes_.WriteTo(ref output, _repeated_taskTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += trackParts_.CalculateSize(_repeated_trackParts_codec);
      size += facilities_.CalculateSize(_repeated_facilities_codec);
      size += taskTypes_.CalculateSize(_repeated_taskTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      trackParts_.Add(other.trackParts_);
      facilities_.Add(other.facilities_);
      taskTypes_.Add(other.taskTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            trackParts_.AddEntriesFrom(input, _repeated_trackParts_codec);
            break;
          }
          case 18: {
            facilities_.AddEntriesFrom(input, _repeated_facilities_codec);
            break;
          }
          case 26: {
            taskTypes_.AddEntriesFrom(input, _repeated_taskTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            trackParts_.AddEntriesFrom(ref input, _repeated_trackParts_codec);
            break;
          }
          case 18: {
            facilities_.AddEntriesFrom(ref input, _repeated_facilities_codec);
            break;
          }
          case 26: {
            taskTypes_.AddEntriesFrom(ref input, _repeated_taskTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Resource : pb::IMessage<Resource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIface.LocationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource(Resource other) : this() {
      name_ = other.name_;
      switch (other.ResourceCase) {
        case ResourceOneofCase.TrackPartId:
          TrackPartId = other.TrackPartId;
          break;
        case ResourceOneofCase.FacilityId:
          FacilityId = other.FacilityId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of this resource
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trackPartId" field.</summary>
    public const int TrackPartIdFieldNumber = 3;
    /// <summary>
    /// Set this field if this Resource is a TrackPart.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TrackPartId {
      get { return resourceCase_ == ResourceOneofCase.TrackPartId ? (ulong) resource_ : 0UL; }
      set {
        resource_ = value;
        resourceCase_ = ResourceOneofCase.TrackPartId;
      }
    }

    /// <summary>Field number for the "facilityId" field.</summary>
    public const int FacilityIdFieldNumber = 4;
    /// <summary>
    /// Set this field if this Resource is a Facility.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FacilityId {
      get { return resourceCase_ == ResourceOneofCase.FacilityId ? (ulong) resource_ : 0UL; }
      set {
        resource_ = value;
        resourceCase_ = ResourceOneofCase.FacilityId;
      }
    }

    private object resource_;
    /// <summary>Enum of possible cases for the "resource" oneof.</summary>
    public enum ResourceOneofCase {
      None = 0,
      TrackPartId = 3,
      FacilityId = 4,
    }
    private ResourceOneofCase resourceCase_ = ResourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceOneofCase ResourceCase {
      get { return resourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResource() {
      resourceCase_ = ResourceOneofCase.None;
      resource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (TrackPartId != other.TrackPartId) return false;
      if (FacilityId != other.FacilityId) return false;
      if (ResourceCase != other.ResourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (resourceCase_ == ResourceOneofCase.TrackPartId) hash ^= TrackPartId.GetHashCode();
      if (resourceCase_ == ResourceOneofCase.FacilityId) hash ^= FacilityId.GetHashCode();
      hash ^= (int) resourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (resourceCase_ == ResourceOneofCase.TrackPartId) {
        output.WriteRawTag(24);
        output.WriteUInt64(TrackPartId);
      }
      if (resourceCase_ == ResourceOneofCase.FacilityId) {
        output.WriteRawTag(32);
        output.WriteUInt64(FacilityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (resourceCase_ == ResourceOneofCase.TrackPartId) {
        output.WriteRawTag(24);
        output.WriteUInt64(TrackPartId);
      }
      if (resourceCase_ == ResourceOneofCase.FacilityId) {
        output.WriteRawTag(32);
        output.WriteUInt64(FacilityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (resourceCase_ == ResourceOneofCase.TrackPartId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TrackPartId);
      }
      if (resourceCase_ == ResourceOneofCase.FacilityId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FacilityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      switch (other.ResourceCase) {
        case ResourceOneofCase.TrackPartId:
          TrackPartId = other.TrackPartId;
          break;
        case ResourceOneofCase.FacilityId:
          FacilityId = other.FacilityId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            TrackPartId = input.ReadUInt64();
            break;
          }
          case 32: {
            FacilityId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            TrackPartId = input.ReadUInt64();
            break;
          }
          case 32: {
            FacilityId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A facility is an object at the location not part of the rails.
  /// </summary>
  public sealed partial class Facility : pb::IMessage<Facility>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Facility> _parser = new pb::MessageParser<Facility>(() => new Facility());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Facility> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIface.LocationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Facility() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Facility(Facility other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      relatedTrackParts_ = other.relatedTrackParts_.Clone();
      taskTypes_ = other.taskTypes_.Clone();
      simultaneousUsageCount_ = other.simultaneousUsageCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Facility Clone() {
      return new Facility(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// A unique ID which is referenced by other messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relatedTrackParts" field.</summary>
    public const int RelatedTrackPartsFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_relatedTrackParts_codec
        = pb::FieldCodec.ForUInt64(26);
    private readonly pbc::RepeatedField<ulong> relatedTrackParts_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// The TrackPart IDs this Facility can be reached from / operates on / etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> RelatedTrackParts {
      get { return relatedTrackParts_; }
    }

    /// <summary>Field number for the "taskTypes" field.</summary>
    public const int TaskTypesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::AlgoIface.TaskType> _repeated_taskTypes_codec
        = pb::FieldCodec.ForMessage(34, global::AlgoIface.TaskType.Parser);
    private readonly pbc::RepeatedField<global::AlgoIface.TaskType> taskTypes_ = new pbc::RepeatedField<global::AlgoIface.TaskType>();
    /// <summary>
    /// Possible tasks at this facility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AlgoIface.TaskType> TaskTypes {
      get { return taskTypes_; }
    }

    /// <summary>Field number for the "simultaneousUsageCount" field.</summary>
    public const int SimultaneousUsageCountFieldNumber = 5;
    private uint simultaneousUsageCount_;
    /// <summary>
    /// The maximum number of ShuntingUnits which can use this resource at the same time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SimultaneousUsageCount {
      get { return simultaneousUsageCount_; }
      set {
        simultaneousUsageCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Facility);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Facility other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if(!relatedTrackParts_.Equals(other.relatedTrackParts_)) return false;
      if(!taskTypes_.Equals(other.taskTypes_)) return false;
      if (SimultaneousUsageCount != other.SimultaneousUsageCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      hash ^= relatedTrackParts_.GetHashCode();
      hash ^= taskTypes_.GetHashCode();
      if (SimultaneousUsageCount != 0) hash ^= SimultaneousUsageCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      relatedTrackParts_.WriteTo(output, _repeated_relatedTrackParts_codec);
      taskTypes_.WriteTo(output, _repeated_taskTypes_codec);
      if (SimultaneousUsageCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SimultaneousUsageCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      relatedTrackParts_.WriteTo(ref output, _repeated_relatedTrackParts_codec);
      taskTypes_.WriteTo(ref output, _repeated_taskTypes_codec);
      if (SimultaneousUsageCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SimultaneousUsageCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += relatedTrackParts_.CalculateSize(_repeated_relatedTrackParts_codec);
      size += taskTypes_.CalculateSize(_repeated_taskTypes_codec);
      if (SimultaneousUsageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SimultaneousUsageCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Facility other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      relatedTrackParts_.Add(other.relatedTrackParts_);
      taskTypes_.Add(other.taskTypes_);
      if (other.SimultaneousUsageCount != 0) {
        SimultaneousUsageCount = other.SimultaneousUsageCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            relatedTrackParts_.AddEntriesFrom(input, _repeated_relatedTrackParts_codec);
            break;
          }
          case 34: {
            taskTypes_.AddEntriesFrom(input, _repeated_taskTypes_codec);
            break;
          }
          case 40: {
            SimultaneousUsageCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            relatedTrackParts_.AddEntriesFrom(ref input, _repeated_relatedTrackParts_codec);
            break;
          }
          case 34: {
            taskTypes_.AddEntriesFrom(ref input, _repeated_taskTypes_codec);
            break;
          }
          case 40: {
            SimultaneousUsageCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A TrackPart forms a single node in the rail graph.
  /// </summary>
  public sealed partial class TrackPart : pb::IMessage<TrackPart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackPart> _parser = new pb::MessageParser<TrackPart>(() => new TrackPart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackPart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIface.LocationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackPart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackPart(TrackPart other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      aSide_ = other.aSide_.Clone();
      bSide_ = other.bSide_.Clone();
      length_ = other.length_;
      name_ = other.name_;
      sawMovementAllowed_ = other.sawMovementAllowed_;
      parkingAllowed_ = other.parkingAllowed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackPart Clone() {
      return new TrackPart(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// A unique ID; this is used to reference this TrackPart.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::AlgoIface.TrackPartType type_ = global::AlgoIface.TrackPartType.RailRoad;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AlgoIface.TrackPartType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "aSide" field.</summary>
    public const int ASideFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_aSide_codec
        = pb::FieldCodec.ForUInt64(26);
    private readonly pbc::RepeatedField<ulong> aSide_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// Tracks this TrackPart are connected to are defined through the aSide and bSide.
    /// An explanation per TrackPartType:
    /// RailRoad             aSide contains one end, and bSide the other
    /// Switch:              aSide is the permanent track (that's one track), and bSide contains the branching/option tracks (that's two).
    /// EnglishSwitch:       Define: AR = aSide[0], AL = aSide[1], BR = bSide[0], BL = bSide[1]. Then: AR is connected to BL and BR. AL is connected to BL and BR.
    /// HalfEnglishSwitch:   Define: AR = aSide[0], AL = aSide[1], BR = bSide[0], BL = bSide[1]. Then: AR is connected to BL and BR. AL is connected to BL (but NOT BR).
    /// Intersection:        Both parts of an ongoing track are in the same *Side.
    /// Bumper:              aSide contains the track part. bSide is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> ASide {
      get { return aSide_; }
    }

    /// <summary>Field number for the "bSide" field.</summary>
    public const int BSideFieldNumber = 4;
    private static readonly pb::FieldCodec<ulong> _repeated_bSide_codec
        = pb::FieldCodec.ForUInt64(34);
    private readonly pbc::RepeatedField<ulong> bSide_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> BSide {
      get { return bSide_; }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 5;
    private double length_;
    /// <summary>
    /// Length of the track in meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// Name of the TrackPart
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sawMovementAllowed" field.</summary>
    public const int SawMovementAllowedFieldNumber = 7;
    private bool sawMovementAllowed_;
    /// <summary>
    /// For railroads: whether or not a saw movement ('kopmaken') is allowed on this railroad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SawMovementAllowed {
      get { return sawMovementAllowed_; }
      set {
        sawMovementAllowed_ = value;
      }
    }

    /// <summary>Field number for the "parkingAllowed" field.</summary>
    public const int ParkingAllowedFieldNumber = 8;
    private bool parkingAllowed_;
    /// <summary>
    /// For railroads: whether or not parking is allowed on this railroad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ParkingAllowed {
      get { return parkingAllowed_; }
      set {
        parkingAllowed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackPart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackPart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if(!aSide_.Equals(other.aSide_)) return false;
      if(!bSide_.Equals(other.bSide_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Length, other.Length)) return false;
      if (Name != other.Name) return false;
      if (SawMovementAllowed != other.SawMovementAllowed) return false;
      if (ParkingAllowed != other.ParkingAllowed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Type != global::AlgoIface.TrackPartType.RailRoad) hash ^= Type.GetHashCode();
      hash ^= aSide_.GetHashCode();
      hash ^= bSide_.GetHashCode();
      if (Length != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Length);
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SawMovementAllowed != false) hash ^= SawMovementAllowed.GetHashCode();
      if (ParkingAllowed != false) hash ^= ParkingAllowed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type != global::AlgoIface.TrackPartType.RailRoad) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      aSide_.WriteTo(output, _repeated_aSide_codec);
      bSide_.WriteTo(output, _repeated_bSide_codec);
      if (Length != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Length);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (SawMovementAllowed != false) {
        output.WriteRawTag(56);
        output.WriteBool(SawMovementAllowed);
      }
      if (ParkingAllowed != false) {
        output.WriteRawTag(64);
        output.WriteBool(ParkingAllowed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type != global::AlgoIface.TrackPartType.RailRoad) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      aSide_.WriteTo(ref output, _repeated_aSide_codec);
      bSide_.WriteTo(ref output, _repeated_bSide_codec);
      if (Length != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Length);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (SawMovementAllowed != false) {
        output.WriteRawTag(56);
        output.WriteBool(SawMovementAllowed);
      }
      if (ParkingAllowed != false) {
        output.WriteRawTag(64);
        output.WriteBool(ParkingAllowed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Type != global::AlgoIface.TrackPartType.RailRoad) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += aSide_.CalculateSize(_repeated_aSide_codec);
      size += bSide_.CalculateSize(_repeated_bSide_codec);
      if (Length != 0D) {
        size += 1 + 8;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SawMovementAllowed != false) {
        size += 1 + 1;
      }
      if (ParkingAllowed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackPart other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Type != global::AlgoIface.TrackPartType.RailRoad) {
        Type = other.Type;
      }
      aSide_.Add(other.aSide_);
      bSide_.Add(other.bSide_);
      if (other.Length != 0D) {
        Length = other.Length;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SawMovementAllowed != false) {
        SawMovementAllowed = other.SawMovementAllowed;
      }
      if (other.ParkingAllowed != false) {
        ParkingAllowed = other.ParkingAllowed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Type = (global::AlgoIface.TrackPartType) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            aSide_.AddEntriesFrom(input, _repeated_aSide_codec);
            break;
          }
          case 34:
          case 32: {
            bSide_.AddEntriesFrom(input, _repeated_bSide_codec);
            break;
          }
          case 41: {
            Length = input.ReadDouble();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            SawMovementAllowed = input.ReadBool();
            break;
          }
          case 64: {
            ParkingAllowed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Type = (global::AlgoIface.TrackPartType) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            aSide_.AddEntriesFrom(ref input, _repeated_aSide_codec);
            break;
          }
          case 34:
          case 32: {
            bSide_.AddEntriesFrom(ref input, _repeated_bSide_codec);
            break;
          }
          case 41: {
            Length = input.ReadDouble();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            SawMovementAllowed = input.ReadBool();
            break;
          }
          case 64: {
            ParkingAllowed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaskType : pb::IMessage<TaskType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskType> _parser = new pb::MessageParser<TaskType>(() => new TaskType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AlgoIface.LocationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskType(TaskType other) : this() {
      switch (other.TaskTypeCase) {
        case TaskTypeOneofCase.Predefined:
          Predefined = other.Predefined;
          break;
        case TaskTypeOneofCase.Other:
          Other = other.Other;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskType Clone() {
      return new TaskType(this);
    }

    /// <summary>Field number for the "predefined" field.</summary>
    public const int PredefinedFieldNumber = 1;
    /// <summary>
    /// If the task type maps to one of PredefinedTaskType, use this type here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AlgoIface.PredefinedTaskType Predefined {
      get { return taskTypeCase_ == TaskTypeOneofCase.Predefined ? (global::AlgoIface.PredefinedTaskType) taskType_ : global::AlgoIface.PredefinedTaskType.Move; }
      set {
        taskType_ = value;
        taskTypeCase_ = TaskTypeOneofCase.Predefined;
      }
    }

    /// <summary>Field number for the "other" field.</summary>
    public const int OtherFieldNumber = 2;
    /// <summary>
    /// Otherwise, specify a custom name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Other {
      get { return taskTypeCase_ == TaskTypeOneofCase.Other ? (string) taskType_ : ""; }
      set {
        taskType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        taskTypeCase_ = TaskTypeOneofCase.Other;
      }
    }

    private object taskType_;
    /// <summary>Enum of possible cases for the "taskType" oneof.</summary>
    public enum TaskTypeOneofCase {
      None = 0,
      Predefined = 1,
      Other = 2,
    }
    private TaskTypeOneofCase taskTypeCase_ = TaskTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskTypeOneofCase TaskTypeCase {
      get { return taskTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskType() {
      taskTypeCase_ = TaskTypeOneofCase.None;
      taskType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Predefined != other.Predefined) return false;
      if (Other != other.Other) return false;
      if (TaskTypeCase != other.TaskTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (taskTypeCase_ == TaskTypeOneofCase.Predefined) hash ^= Predefined.GetHashCode();
      if (taskTypeCase_ == TaskTypeOneofCase.Other) hash ^= Other.GetHashCode();
      hash ^= (int) taskTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (taskTypeCase_ == TaskTypeOneofCase.Predefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Predefined);
      }
      if (taskTypeCase_ == TaskTypeOneofCase.Other) {
        output.WriteRawTag(18);
        output.WriteString(Other);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (taskTypeCase_ == TaskTypeOneofCase.Predefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Predefined);
      }
      if (taskTypeCase_ == TaskTypeOneofCase.Other) {
        output.WriteRawTag(18);
        output.WriteString(Other);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (taskTypeCase_ == TaskTypeOneofCase.Predefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Predefined);
      }
      if (taskTypeCase_ == TaskTypeOneofCase.Other) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Other);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskType other) {
      if (other == null) {
        return;
      }
      switch (other.TaskTypeCase) {
        case TaskTypeOneofCase.Predefined:
          Predefined = other.Predefined;
          break;
        case TaskTypeOneofCase.Other:
          Other = other.Other;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            taskType_ = input.ReadEnum();
            taskTypeCase_ = TaskTypeOneofCase.Predefined;
            break;
          }
          case 18: {
            Other = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            taskType_ = input.ReadEnum();
            taskTypeCase_ = TaskTypeOneofCase.Predefined;
            break;
          }
          case 18: {
            Other = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
